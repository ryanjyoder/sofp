<?xml version="1.0" encoding="utf-8"?>
<posthistory>
  <row Id="6" PostHistoryTypeId="2" PostId="7" RevisionGUID="c30df0f4-a2d9-426e-a2dd-2cc3aa4d9205" CreationDate="2008-07-31T22:17:57.883" UserId="9" Text="The explicit cast to double in the first answer isn't necessary - identifying the constant as 5000.0 (or as 5000d) is sufficient." />
  <row Id="12" PostHistoryTypeId="1" PostId="17" RevisionGUID="0421fb42-a29a-4cb2-84ba-a828725410f8" CreationDate="2008-08-01T05:09:55.993" UserId="2" Text="Binary Data in MYSQL" />
  <row Id="13" PostHistoryTypeId="3" PostId="17" RevisionGUID="0421fb42-a29a-4cb2-84ba-a828725410f8" CreationDate="2008-08-01T05:09:55.993" UserId="2" Text="&lt;database&gt;&lt;mysql&gt;" />
  <row Id="14" PostHistoryTypeId="2" PostId="17" RevisionGUID="0421fb42-a29a-4cb2-84ba-a828725410f8" CreationDate="2008-08-01T05:09:55.993" UserId="2" Text="How do I store binary data in mysql?" />
  <row Id="16" PostHistoryTypeId="2" PostId="18" RevisionGUID="0cfdfa19-039f-4645-8a48-1c316543b98f" CreationDate="2008-08-01T05:12:44.193" UserDisplayName="phpguy" Text="For a table like this:&#xD;&#xA;&#xD;&#xA;    CREATE TABLE binary_data (&#xD;&#xA;    id INT(4) NOT NULL AUTO_INCREMENT PRIMARY KEY,&#xD;&#xA;    description CHAR(50),&#xD;&#xA;    bin_data LONGBLOB,&#xD;&#xA;    filename CHAR(50),&#xD;&#xA;    filesize CHAR(50),&#xD;&#xA;    filetype CHAR(50)&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;Here is a PHP example:&#xD;&#xA;&#xD;&#xA;    &lt;?php&#xD;&#xA;    &#xD;&#xA;    // store.php3 - by Florian Dittmer &lt;dittmer@gmx.net&gt;&#xD;&#xA;    // Example php script to demonstrate the storing of binary files into&#xD;&#xA;    // an sql database. More information can be found at http://www.phpbuilder.com/&#xD;&#xA;    ?&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;html&gt;&#xD;&#xA;    &lt;head&gt;&lt;title&gt;Store binary data into SQL Database&lt;/title&gt;&lt;/head&gt;&#xD;&#xA;    &lt;body&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;?php&#xD;&#xA;    // code that will be executed if the form has been submitted:&#xD;&#xA;    &#xD;&#xA;    if ($submit) {&#xD;&#xA;    &#xD;&#xA;        // connect to the database&#xD;&#xA;        // (you may have to adjust the hostname,username or password)&#xD;&#xA;    &#xD;&#xA;        MYSQL_CONNECT(&quot;localhost&quot;,&quot;root&quot;,&quot;password&quot;);&#xD;&#xA;        mysql_select_db(&quot;binary_data&quot;);&#xD;&#xA;    &#xD;&#xA;        $data = addslashes(fread(fopen($form_data, &quot;r&quot;), filesize($form_data)));&#xD;&#xA;    &#xD;&#xA;        $result=MYSQL_QUERY(&quot;INSERT INTO binary_data (description,bin_data,filename,filesize,filetype) &quot;.&#xD;&#xA;            &quot;VALUES ('$form_description','$data','$form_data_name','$form_data_size','$form_data_type')&quot;);&#xD;&#xA;    &#xD;&#xA;        $id= mysql_insert_id();&#xD;&#xA;        print &quot;&lt;p&gt;This file has the following Database ID: &lt;b&gt;$id&lt;/b&gt;&quot;;&#xD;&#xA;    &#xD;&#xA;        MYSQL_CLOSE();&#xD;&#xA;    &#xD;&#xA;    } else {&#xD;&#xA;    &#xD;&#xA;        // else show the form to submit new data:&#xD;&#xA;    ?&gt;&#xD;&#xA;    &#xD;&#xA;        &lt;form method=&quot;post&quot; action=&quot;&lt;?php echo $PHP_SELF; ?&gt;&quot; enctype=&quot;multipart/form-data&quot;&gt;&#xD;&#xA;        File Description:&lt;br&gt;&#xD;&#xA;        &lt;input type=&quot;text&quot; name=&quot;form_description&quot;  size=&quot;40&quot;&gt;&#xD;&#xA;        &lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;1000000&quot;&gt;&#xD;&#xA;        &lt;br&gt;File to upload/store in database:&lt;br&gt;&#xD;&#xA;        &lt;input type=&quot;file&quot; name=&quot;form_data&quot;  size=&quot;40&quot;&gt;&#xD;&#xA;        &lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;submit&quot;&gt;&#xD;&#xA;        &lt;/form&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;?php&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    ?&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;/body&gt;&#xD;&#xA;    &lt;/html&gt;" />
  <row Id="17" PostHistoryTypeId="1" PostId="25" RevisionGUID="617afb21-e2be-477c-bc74-95e3f319bc5d" CreationDate="2008-08-01T12:13:50.207" UserId="23" Text="How to use the C socket API in C++" />
  <row Id="18" PostHistoryTypeId="3" PostId="25" RevisionGUID="617afb21-e2be-477c-bc74-95e3f319bc5d" CreationDate="2008-08-01T12:13:50.207" UserId="23" Text="&lt;c++&gt;&lt;c&gt;&lt;sockets&gt;&lt;zos&gt;" />
  <row Id="19" PostHistoryTypeId="2" PostId="25" RevisionGUID="617afb21-e2be-477c-bc74-95e3f319bc5d" CreationDate="2008-08-01T12:13:50.207" UserId="23" Text="I've been having issues getting the C sockets API to work properly in C++. Specifically, although I am including sys/socket.h, I still get compile time errors telling me that AF_INET is not defined. Am I missing something obvious, or could this be related to the fact that I'm doing this coding on z/OS and my problems are much more complicated? ;)" />
  <row Id="192791474" PostHistoryTypeId="5" PostId="54960609" RevisionGUID="24de1686-ee92-45f4-b385-2a6f44c9d9d8" CreationDate="2019-03-03T05:59:51.057" UserId="2529107" Comment="fixed wrong date" Text="I'm working with some historical baseball data and trying to get matchup information (batter/pitcher) for previous games.  &#xD;&#xA;&#xD;&#xA;Example data:&#xD;&#xA;&#xD;&#xA;    import pandas as pd&#xD;&#xA;&#xD;&#xA;    data = {'ID': ['A','A','A','A','A','A','B','B','B','B','B'],&#xD;&#xA;            'Year' : ['2017-05-01', '2017-06-03', '2017-08-02', '2018-05-30', '2018-07-23', '2018-09-14', '2017-06-01', '2017-08-03', '2018-05-15', '2018-07-23', '2017-05-01'],&#xD;&#xA;            'ID2' : [1,2,3,2,2,1,2,2,2,1,1],&#xD;&#xA;           'Score 2': [1,4,5,7,5,5,6,1,4,5,6],&#xD;&#xA;           'Score 3': [1,4,5,7,5,5,6,1,4,5,6], &#xD;&#xA;           'Score 4': [1,4,5,7,5,5,6,1,4,5,6]}&#xD;&#xA;    df = pd.DataFrame(data)&#xD;&#xA;&#xD;&#xA;    lookup_data = {&quot;First_Person&quot; : ['A', 'B'],&#xD;&#xA;                 &quot;Second_Person&quot; : ['1', '2'],&#xD;&#xA;                 &quot;Year&quot; : ['2018', '2018']}&#xD;&#xA;    &#xD;&#xA;    lookup_df = pd.DataFrame(lookup_data)&#xD;&#xA;&#xD;&#xA;Lookup df has the current matchups, df has the historical data and current matchups.  &#xD;&#xA;&#xD;&#xA;I want to find, for example, for Person A against Person 2, what were the results of any of their matchups on any previous date? &#xD;&#xA;&#xD;&#xA;I can do this with: &#xD;&#xA;&#xD;&#xA;    history_list = []&#xD;&#xA;    def get_history(row, df, hist_list):&#xD;&#xA;        #we filter the df to matchups containing both players before the previous date and sum all events in their history&#xD;&#xA;        history = df[(df['ID'] == row['First_Person']) &amp; (df['ID2'] == row['Second_Person']) &amp; (df['Year'] &lt; row['Year'])].sum().iloc[3:]&#xD;&#xA;        #add to a list to keep track of results&#xD;&#xA;        hist_list.append(list(history.values) + [row['Year']+row['First_Person']+row['Second_Person']])&#xD;&#xA;&#xD;&#xA;and then execute with apply like so: &#xD;&#xA;&#xD;&#xA;    lookup_df.apply(get_history, df=df, hist_list = history_list, axis=1)&#xD;&#xA;&#xD;&#xA;Expected results would be something like:&#xD;&#xA;&#xD;&#xA;    1st P  Matchup date 2nd p   Historical scores&#xD;&#xA;    A      2018-07-23     2     11 11 11&#xD;&#xA;    B      2018-05-15     2     7  7  7&#xD;&#xA;&#xD;&#xA;But this is pretty slow - the filtering operation takes around 50ms per lookup. &#xD;&#xA;&#xD;&#xA;Is there a better way I can approach this problem?  This currently would take over 3 hours to run across 250k historical matchups. " />
  <row Id="192791475" PostHistoryTypeId="4" PostId="53394992" RevisionGUID="36454305-9eea-468d-8812-aa3676e6cb80" CreationDate="2019-03-03T05:59:51.570" UserId="1033581" Comment="spelling in title" Text="change data in struct" />
  <row Id="192791477" PostHistoryTypeId="5" PostId="9322858" RevisionGUID="74b7a40c-d977-4853-a72b-d080ef0d9798" CreationDate="2019-03-03T06:00:14.473" UserId="1033581" Comment="spelling in title" Text="How to change uitableview cell background image?&#xD;&#xA;&#xD;&#xA;I write this code, it's not working. but I am sure this code some minor mistake. &#xD;&#xA;&#xD;&#xA;    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];&#xD;&#xA;        &#xD;&#xA;    if (cell == nil) &#xD;&#xA;    {&#xD;&#xA;    cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];&#xD;&#xA;    		[cell setSelectionStyle:UITableViewCellSelectionStyleNone];&#xD;&#xA;    		[cell setBackgroundView:[UIImage imageNamed:@&quot;selected-bg.png&quot;]];&#xD;&#xA;    }&#xD;&#xA;" />
  <row Id="192791478" PostHistoryTypeId="4" PostId="9322858" RevisionGUID="74b7a40c-d977-4853-a72b-d080ef0d9798" CreationDate="2019-03-03T06:00:14.473" UserId="1033581" Comment="spelling in title" Text="change cell background" />
  <row Id="192791479" PostHistoryTypeId="2" PostId="54966021" RevisionGUID="d9400fbd-da53-41bc-a4b0-67e2e475fceb" CreationDate="2019-03-03T06:00:15.477" UserId="491066" Text="Using jgit, I've checked out a branch (branch1). After some time, I want to fetch() and see which files have been updated (in the origin) since my last fetch.&#xD;&#xA;&#xD;&#xA;    FetchResult fetchResult = setup_creds(m_git.fetch().setRefSpecs(new RefSpec(&quot;refs/heads/branch1&quot;))).call();&#xD;&#xA;&#xD;&#xA;    // For example:&#xD;&#xA;    fetchResult.getUpdatedFiles()&#xD;&#xA;&#xD;&#xA;How do I do this?&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" />
  <row Id="192791480" PostHistoryTypeId="1" PostId="54966021" RevisionGUID="d9400fbd-da53-41bc-a4b0-67e2e475fceb" CreationDate="2019-03-03T06:00:15.477" UserId="491066" Text="Using jgit fetch() and check for updated files" />
  <row Id="192791481" PostHistoryTypeId="3" PostId="54966021" RevisionGUID="d9400fbd-da53-41bc-a4b0-67e2e475fceb" CreationDate="2019-03-03T06:00:15.477" UserId="491066" Text="&lt;java&gt;&lt;jgit&gt;" />
  <row Id="192791484" PostHistoryTypeId="2" PostId="54966022" RevisionGUID="b7c887b7-1ebf-4879-91d4-39194ef2ab5b" CreationDate="2019-03-03T06:00:15.740" UserId="8256857" Text="OK, the issue was that it was just going off and finding headers on its own. I have multiple output directories so that I can work on betas and still keep the previous working version(s) around. It was grabbing the previous version, and one of the things I'd done since then was a massive change of the whole code base over to new style enums. So it was seeing the old, non-safe enums.&#xD;&#xA;&#xD;&#xA;Getting it to correctly include and ignore directories was a bit of an adventure but it seems to be working now.&#xD;&#xA;" />
  <row Id="192791485" PostHistoryTypeId="10" PostId="54965828" RevisionGUID="e418a7cc-266a-483a-9987-97277e05d4b2" CreationDate="2019-03-03T06:00:19.157" UserId="366904" Comment="102" Text="{&quot;Voters&quot;:[{&quot;Id&quot;:8472377,&quot;DisplayName&quot;:&quot;Austin&quot;},{&quot;Id&quot;:366904,&quot;DisplayName&quot;:&quot;Cody Gray&quot;}]}" />
</posthistory>